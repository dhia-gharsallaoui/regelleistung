/*
IP RL BSP API

IP RL BSP API for participation in capacity/energy market tenders.

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ComplexBidComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplexBidComponent{}

// ComplexBidComponent Complex bid component.
type ComplexBidComponent struct {
	BidType *BidType `json:"bidType,omitempty"`
	// Bid identification
	ComplexBidId *string `json:"complexBidId,omitempty"`
	Direction Direction `json:"direction"`
	MinQuantity *Quantity `json:"minQuantity,omitempty"`
	OfferedQuantity Quantity `json:"offeredQuantity"`
	// Price information of the bid.
	Prices []Price `json:"prices"`
	// Custom tag for bids
	Tag *string `json:"tag,omitempty"`
}

// NewComplexBidComponent instantiates a new ComplexBidComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplexBidComponent(direction Direction, offeredQuantity Quantity, prices []Price) *ComplexBidComponent {
	this := ComplexBidComponent{}
	var bidType BidType = SIMPLE
	this.BidType = &bidType
	this.Direction = direction
	this.OfferedQuantity = offeredQuantity
	this.Prices = prices
	return &this
}

// NewComplexBidComponentWithDefaults instantiates a new ComplexBidComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplexBidComponentWithDefaults() *ComplexBidComponent {
	this := ComplexBidComponent{}
	var bidType BidType = SIMPLE
	this.BidType = &bidType
	return &this
}

// GetBidType returns the BidType field value if set, zero value otherwise.
func (o *ComplexBidComponent) GetBidType() BidType {
	if o == nil || isNil(o.BidType) {
		var ret BidType
		return ret
	}
	return *o.BidType
}

// GetBidTypeOk returns a tuple with the BidType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetBidTypeOk() (*BidType, bool) {
	if o == nil || isNil(o.BidType) {
		return nil, false
	}
	return o.BidType, true
}

// HasBidType returns a boolean if a field has been set.
func (o *ComplexBidComponent) HasBidType() bool {
	if o != nil && !isNil(o.BidType) {
		return true
	}

	return false
}

// SetBidType gets a reference to the given BidType and assigns it to the BidType field.
func (o *ComplexBidComponent) SetBidType(v BidType) {
	o.BidType = &v
}

// GetComplexBidId returns the ComplexBidId field value if set, zero value otherwise.
func (o *ComplexBidComponent) GetComplexBidId() string {
	if o == nil || isNil(o.ComplexBidId) {
		var ret string
		return ret
	}
	return *o.ComplexBidId
}

// GetComplexBidIdOk returns a tuple with the ComplexBidId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetComplexBidIdOk() (*string, bool) {
	if o == nil || isNil(o.ComplexBidId) {
		return nil, false
	}
	return o.ComplexBidId, true
}

// HasComplexBidId returns a boolean if a field has been set.
func (o *ComplexBidComponent) HasComplexBidId() bool {
	if o != nil && !isNil(o.ComplexBidId) {
		return true
	}

	return false
}

// SetComplexBidId gets a reference to the given string and assigns it to the ComplexBidId field.
func (o *ComplexBidComponent) SetComplexBidId(v string) {
	o.ComplexBidId = &v
}

// GetDirection returns the Direction field value
func (o *ComplexBidComponent) GetDirection() Direction {
	if o == nil {
		var ret Direction
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetDirectionOk() (*Direction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *ComplexBidComponent) SetDirection(v Direction) {
	o.Direction = v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *ComplexBidComponent) GetMinQuantity() Quantity {
	if o == nil || isNil(o.MinQuantity) {
		var ret Quantity
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetMinQuantityOk() (*Quantity, bool) {
	if o == nil || isNil(o.MinQuantity) {
		return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *ComplexBidComponent) HasMinQuantity() bool {
	if o != nil && !isNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given Quantity and assigns it to the MinQuantity field.
func (o *ComplexBidComponent) SetMinQuantity(v Quantity) {
	o.MinQuantity = &v
}

// GetOfferedQuantity returns the OfferedQuantity field value
func (o *ComplexBidComponent) GetOfferedQuantity() Quantity {
	if o == nil {
		var ret Quantity
		return ret
	}

	return o.OfferedQuantity
}

// GetOfferedQuantityOk returns a tuple with the OfferedQuantity field value
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetOfferedQuantityOk() (*Quantity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferedQuantity, true
}

// SetOfferedQuantity sets field value
func (o *ComplexBidComponent) SetOfferedQuantity(v Quantity) {
	o.OfferedQuantity = v
}

// GetPrices returns the Prices field value
func (o *ComplexBidComponent) GetPrices() []Price {
	if o == nil {
		var ret []Price
		return ret
	}

	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetPricesOk() ([]Price, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prices, true
}

// SetPrices sets field value
func (o *ComplexBidComponent) SetPrices(v []Price) {
	o.Prices = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ComplexBidComponent) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplexBidComponent) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ComplexBidComponent) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *ComplexBidComponent) SetTag(v string) {
	o.Tag = &v
}

func (o ComplexBidComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplexBidComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BidType) {
		toSerialize["bidType"] = o.BidType
	}
	if !isNil(o.ComplexBidId) {
		toSerialize["complexBidId"] = o.ComplexBidId
	}
	toSerialize["direction"] = o.Direction
	if !isNil(o.MinQuantity) {
		toSerialize["minQuantity"] = o.MinQuantity
	}
	toSerialize["offeredQuantity"] = o.OfferedQuantity
	toSerialize["prices"] = o.Prices
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableComplexBidComponent struct {
	value *ComplexBidComponent
	isSet bool
}

func (v NullableComplexBidComponent) Get() *ComplexBidComponent {
	return v.value
}

func (v *NullableComplexBidComponent) Set(val *ComplexBidComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableComplexBidComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableComplexBidComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplexBidComponent(val *ComplexBidComponent) *NullableComplexBidComponent {
	return &NullableComplexBidComponent{value: val, isSet: true}
}

func (v NullableComplexBidComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplexBidComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


