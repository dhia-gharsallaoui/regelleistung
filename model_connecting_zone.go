/*
IP RL BSP API

IP RL BSP API for participation in capacity/energy market tenders.

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectingZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectingZone{}

// ConnectingZone Representation of a connecting zone. 
type ConnectingZone struct {
	ZoneType string `json:"zoneType"`
	Zone string `json:"zone"`
}

// NewConnectingZone instantiates a new ConnectingZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectingZone(zoneType string, zone string) *ConnectingZone {
	this := ConnectingZone{}
	this.ZoneType = zoneType
	this.Zone = zone
	return &this
}

// NewConnectingZoneWithDefaults instantiates a new ConnectingZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectingZoneWithDefaults() *ConnectingZone {
	this := ConnectingZone{}
	return &this
}

// GetZoneType returns the ZoneType field value
func (o *ConnectingZone) GetZoneType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneType
}

// GetZoneTypeOk returns a tuple with the ZoneType field value
// and a boolean to check if the value has been set.
func (o *ConnectingZone) GetZoneTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneType, true
}

// SetZoneType sets field value
func (o *ConnectingZone) SetZoneType(v string) {
	o.ZoneType = v
}

// GetZone returns the Zone field value
func (o *ConnectingZone) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *ConnectingZone) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *ConnectingZone) SetZone(v string) {
	o.Zone = v
}

func (o ConnectingZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectingZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["zoneType"] = o.ZoneType
	toSerialize["zone"] = o.Zone
	return toSerialize, nil
}

type NullableConnectingZone struct {
	value *ConnectingZone
	isSet bool
}

func (v NullableConnectingZone) Get() *ConnectingZone {
	return v.value
}

func (v *NullableConnectingZone) Set(val *ConnectingZone) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectingZone) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectingZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectingZone(val *ConnectingZone) *NullableConnectingZone {
	return &NullableConnectingZone{value: val, isSet: true}
}

func (v NullableConnectingZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectingZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


