/*
IP RL BSP API

IP RL BSP API for participation in capacity/energy market tenders.

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FrameworkAgreement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameworkAgreement{}

// FrameworkAgreement Representation of framework agreements.
type FrameworkAgreement struct {
	// ID of a resource.
	Id *string `json:"id,omitempty"`
	ProductType *ProductType `json:"productType,omitempty"`
	ConnectingZone *ConnectingZone `json:"connectingZone,omitempty"`
	// Representation of EIC. The coding scheme is the Energy Identification Coding Scheme (EIC), maintained by ENTSO-e.
	ResourceProvider *string `json:"resourceProvider,omitempty"`
	ContractNumber *string `json:"contractNumber,omitempty"`
	ValidityPeriod *ContractValidityPeriod `json:"validityPeriod,omitempty"`
}

// NewFrameworkAgreement instantiates a new FrameworkAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameworkAgreement() *FrameworkAgreement {
	this := FrameworkAgreement{}
	return &this
}

// NewFrameworkAgreementWithDefaults instantiates a new FrameworkAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameworkAgreementWithDefaults() *FrameworkAgreement {
	this := FrameworkAgreement{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FrameworkAgreement) SetId(v string) {
	o.Id = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetProductType() ProductType {
	if o == nil || isNil(o.ProductType) {
		var ret ProductType
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetProductTypeOk() (*ProductType, bool) {
	if o == nil || isNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasProductType() bool {
	if o != nil && !isNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given ProductType and assigns it to the ProductType field.
func (o *FrameworkAgreement) SetProductType(v ProductType) {
	o.ProductType = &v
}

// GetConnectingZone returns the ConnectingZone field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetConnectingZone() ConnectingZone {
	if o == nil || isNil(o.ConnectingZone) {
		var ret ConnectingZone
		return ret
	}
	return *o.ConnectingZone
}

// GetConnectingZoneOk returns a tuple with the ConnectingZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetConnectingZoneOk() (*ConnectingZone, bool) {
	if o == nil || isNil(o.ConnectingZone) {
		return nil, false
	}
	return o.ConnectingZone, true
}

// HasConnectingZone returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasConnectingZone() bool {
	if o != nil && !isNil(o.ConnectingZone) {
		return true
	}

	return false
}

// SetConnectingZone gets a reference to the given ConnectingZone and assigns it to the ConnectingZone field.
func (o *FrameworkAgreement) SetConnectingZone(v ConnectingZone) {
	o.ConnectingZone = &v
}

// GetResourceProvider returns the ResourceProvider field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetResourceProvider() string {
	if o == nil || isNil(o.ResourceProvider) {
		var ret string
		return ret
	}
	return *o.ResourceProvider
}

// GetResourceProviderOk returns a tuple with the ResourceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetResourceProviderOk() (*string, bool) {
	if o == nil || isNil(o.ResourceProvider) {
		return nil, false
	}
	return o.ResourceProvider, true
}

// HasResourceProvider returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasResourceProvider() bool {
	if o != nil && !isNil(o.ResourceProvider) {
		return true
	}

	return false
}

// SetResourceProvider gets a reference to the given string and assigns it to the ResourceProvider field.
func (o *FrameworkAgreement) SetResourceProvider(v string) {
	o.ResourceProvider = &v
}

// GetContractNumber returns the ContractNumber field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetContractNumber() string {
	if o == nil || isNil(o.ContractNumber) {
		var ret string
		return ret
	}
	return *o.ContractNumber
}

// GetContractNumberOk returns a tuple with the ContractNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetContractNumberOk() (*string, bool) {
	if o == nil || isNil(o.ContractNumber) {
		return nil, false
	}
	return o.ContractNumber, true
}

// HasContractNumber returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasContractNumber() bool {
	if o != nil && !isNil(o.ContractNumber) {
		return true
	}

	return false
}

// SetContractNumber gets a reference to the given string and assigns it to the ContractNumber field.
func (o *FrameworkAgreement) SetContractNumber(v string) {
	o.ContractNumber = &v
}

// GetValidityPeriod returns the ValidityPeriod field value if set, zero value otherwise.
func (o *FrameworkAgreement) GetValidityPeriod() ContractValidityPeriod {
	if o == nil || isNil(o.ValidityPeriod) {
		var ret ContractValidityPeriod
		return ret
	}
	return *o.ValidityPeriod
}

// GetValidityPeriodOk returns a tuple with the ValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkAgreement) GetValidityPeriodOk() (*ContractValidityPeriod, bool) {
	if o == nil || isNil(o.ValidityPeriod) {
		return nil, false
	}
	return o.ValidityPeriod, true
}

// HasValidityPeriod returns a boolean if a field has been set.
func (o *FrameworkAgreement) HasValidityPeriod() bool {
	if o != nil && !isNil(o.ValidityPeriod) {
		return true
	}

	return false
}

// SetValidityPeriod gets a reference to the given ContractValidityPeriod and assigns it to the ValidityPeriod field.
func (o *FrameworkAgreement) SetValidityPeriod(v ContractValidityPeriod) {
	o.ValidityPeriod = &v
}

func (o FrameworkAgreement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameworkAgreement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	if !isNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !isNil(o.ConnectingZone) {
		toSerialize["connectingZone"] = o.ConnectingZone
	}
	if !isNil(o.ResourceProvider) {
		toSerialize["resourceProvider"] = o.ResourceProvider
	}
	if !isNil(o.ContractNumber) {
		toSerialize["contractNumber"] = o.ContractNumber
	}
	if !isNil(o.ValidityPeriod) {
		toSerialize["validityPeriod"] = o.ValidityPeriod
	}
	return toSerialize, nil
}

type NullableFrameworkAgreement struct {
	value *FrameworkAgreement
	isSet bool
}

func (v NullableFrameworkAgreement) Get() *FrameworkAgreement {
	return v.value
}

func (v *NullableFrameworkAgreement) Set(val *FrameworkAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameworkAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameworkAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameworkAgreement(val *FrameworkAgreement) *NullableFrameworkAgreement {
	return &NullableFrameworkAgreement{value: val, isSet: true}
}

func (v NullableFrameworkAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameworkAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


