/*
IP RL BSP API

IP RL BSP API for participation in capacity/energy market tenders.

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the BidSubmissionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BidSubmissionResponse{}

// BidSubmissionResponse struct for BidSubmissionResponse
type BidSubmissionResponse struct {
	// Bid identification
	Id *string `json:"id,omitempty"`
	// Bid identification
	ComplexBidId *string `json:"complexBidId,omitempty"`
	// Bid identification
	GroupId *string `json:"groupId,omitempty"`
	BidType *BidType `json:"bidType,omitempty"`
	// The tender identification is structured as follows:   `[productType]-[deliveryDate]-[market]-[sequenceNumber]`    * `productType` - one of `fcr`, `afrr` or `mfrr`   * `deliveryDate` - ISO 8601 date   * `market` - one of `cm`(capacity market) or `em`(energy market)   * `sequenceNumber` - An ascending number for the identification of different tender runs or time slices.   For more details on the new tender id format, see the [reference guide.](/docs/guide#tender-id). 
	Tender *string `json:"tender,omitempty"`
	ProductType *ProductType `json:"productType,omitempty"`
	// Delivery day of offered control reserve / energy (ISO 8601 format YYYY-MM-DD).
	DeliveryDate *string `json:"deliveryDate,omitempty"`
	Market *ReserveMarket `json:"market,omitempty"`
	ProductName *ProductName `json:"productName,omitempty"`
	Direction *Direction `json:"direction,omitempty"`
	TimeInterval *TimeInterval `json:"timeInterval,omitempty"`
	ConnectingZone *ConnectingZone `json:"connectingZone,omitempty"`
	// Representation of EIC. The coding scheme is the Energy Identification Coding Scheme (EIC), maintained by ENTSO-e.
	ResourceProvider *string `json:"resourceProvider,omitempty"`
	Status *string `json:"status,omitempty"`
	// Receipt time of the bid.
	ReceiptTimestamp *time.Time `json:"receiptTimestamp,omitempty"`
	// Revision timestamp of the bid.
	RevisionTimestamp *time.Time `json:"revisionTimestamp,omitempty"`
	Activation *ActivationType `json:"activation,omitempty"`
	MinQuantity *Quantity `json:"minQuantity,omitempty"`
	OfferedQuantity *Quantity `json:"offeredQuantity,omitempty"`
	AcceptedQuantity *Quantity `json:"acceptedQuantity,omitempty"`
	// Price information of the bid.
	Prices []Price `json:"prices,omitempty"`
	TechnicalLinkage *TechnicalLinkage `json:"technicalLinkage,omitempty"`
	ConditionalLinkage *ConditionalLinkage `json:"conditionalLinkage,omitempty"`
	BackupFor *BalancingServiceProvider `json:"backupFor,omitempty"`
	// Custom tag for bids
	Tag *string `json:"tag,omitempty"`
	Components []Bid `json:"components,omitempty"`
}

// NewBidSubmissionResponse instantiates a new BidSubmissionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBidSubmissionResponse() *BidSubmissionResponse {
	this := BidSubmissionResponse{}
	var bidType BidType = SIMPLE
	this.BidType = &bidType
	var activation ActivationType = DIRECT
	this.Activation = &activation
	return &this
}

// NewBidSubmissionResponseWithDefaults instantiates a new BidSubmissionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidSubmissionResponseWithDefaults() *BidSubmissionResponse {
	this := BidSubmissionResponse{}
	var bidType BidType = SIMPLE
	this.BidType = &bidType
	var activation ActivationType = DIRECT
	this.Activation = &activation
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BidSubmissionResponse) SetId(v string) {
	o.Id = &v
}

// GetComplexBidId returns the ComplexBidId field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetComplexBidId() string {
	if o == nil || isNil(o.ComplexBidId) {
		var ret string
		return ret
	}
	return *o.ComplexBidId
}

// GetComplexBidIdOk returns a tuple with the ComplexBidId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetComplexBidIdOk() (*string, bool) {
	if o == nil || isNil(o.ComplexBidId) {
		return nil, false
	}
	return o.ComplexBidId, true
}

// HasComplexBidId returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasComplexBidId() bool {
	if o != nil && !isNil(o.ComplexBidId) {
		return true
	}

	return false
}

// SetComplexBidId gets a reference to the given string and assigns it to the ComplexBidId field.
func (o *BidSubmissionResponse) SetComplexBidId(v string) {
	o.ComplexBidId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *BidSubmissionResponse) SetGroupId(v string) {
	o.GroupId = &v
}

// GetBidType returns the BidType field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetBidType() BidType {
	if o == nil || isNil(o.BidType) {
		var ret BidType
		return ret
	}
	return *o.BidType
}

// GetBidTypeOk returns a tuple with the BidType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetBidTypeOk() (*BidType, bool) {
	if o == nil || isNil(o.BidType) {
		return nil, false
	}
	return o.BidType, true
}

// HasBidType returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasBidType() bool {
	if o != nil && !isNil(o.BidType) {
		return true
	}

	return false
}

// SetBidType gets a reference to the given BidType and assigns it to the BidType field.
func (o *BidSubmissionResponse) SetBidType(v BidType) {
	o.BidType = &v
}

// GetTender returns the Tender field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetTender() string {
	if o == nil || isNil(o.Tender) {
		var ret string
		return ret
	}
	return *o.Tender
}

// GetTenderOk returns a tuple with the Tender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetTenderOk() (*string, bool) {
	if o == nil || isNil(o.Tender) {
		return nil, false
	}
	return o.Tender, true
}

// HasTender returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasTender() bool {
	if o != nil && !isNil(o.Tender) {
		return true
	}

	return false
}

// SetTender gets a reference to the given string and assigns it to the Tender field.
func (o *BidSubmissionResponse) SetTender(v string) {
	o.Tender = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetProductType() ProductType {
	if o == nil || isNil(o.ProductType) {
		var ret ProductType
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetProductTypeOk() (*ProductType, bool) {
	if o == nil || isNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasProductType() bool {
	if o != nil && !isNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given ProductType and assigns it to the ProductType field.
func (o *BidSubmissionResponse) SetProductType(v ProductType) {
	o.ProductType = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetDeliveryDate() string {
	if o == nil || isNil(o.DeliveryDate) {
		var ret string
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetDeliveryDateOk() (*string, bool) {
	if o == nil || isNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasDeliveryDate() bool {
	if o != nil && !isNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given string and assigns it to the DeliveryDate field.
func (o *BidSubmissionResponse) SetDeliveryDate(v string) {
	o.DeliveryDate = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetMarket() ReserveMarket {
	if o == nil || isNil(o.Market) {
		var ret ReserveMarket
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetMarketOk() (*ReserveMarket, bool) {
	if o == nil || isNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasMarket() bool {
	if o != nil && !isNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given ReserveMarket and assigns it to the Market field.
func (o *BidSubmissionResponse) SetMarket(v ReserveMarket) {
	o.Market = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetProductName() ProductName {
	if o == nil || isNil(o.ProductName) {
		var ret ProductName
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetProductNameOk() (*ProductName, bool) {
	if o == nil || isNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasProductName() bool {
	if o != nil && !isNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given ProductName and assigns it to the ProductName field.
func (o *BidSubmissionResponse) SetProductName(v ProductName) {
	o.ProductName = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetDirection() Direction {
	if o == nil || isNil(o.Direction) {
		var ret Direction
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetDirectionOk() (*Direction, bool) {
	if o == nil || isNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasDirection() bool {
	if o != nil && !isNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given Direction and assigns it to the Direction field.
func (o *BidSubmissionResponse) SetDirection(v Direction) {
	o.Direction = &v
}

// GetTimeInterval returns the TimeInterval field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetTimeInterval() TimeInterval {
	if o == nil || isNil(o.TimeInterval) {
		var ret TimeInterval
		return ret
	}
	return *o.TimeInterval
}

// GetTimeIntervalOk returns a tuple with the TimeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetTimeIntervalOk() (*TimeInterval, bool) {
	if o == nil || isNil(o.TimeInterval) {
		return nil, false
	}
	return o.TimeInterval, true
}

// HasTimeInterval returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasTimeInterval() bool {
	if o != nil && !isNil(o.TimeInterval) {
		return true
	}

	return false
}

// SetTimeInterval gets a reference to the given TimeInterval and assigns it to the TimeInterval field.
func (o *BidSubmissionResponse) SetTimeInterval(v TimeInterval) {
	o.TimeInterval = &v
}

// GetConnectingZone returns the ConnectingZone field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetConnectingZone() ConnectingZone {
	if o == nil || isNil(o.ConnectingZone) {
		var ret ConnectingZone
		return ret
	}
	return *o.ConnectingZone
}

// GetConnectingZoneOk returns a tuple with the ConnectingZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetConnectingZoneOk() (*ConnectingZone, bool) {
	if o == nil || isNil(o.ConnectingZone) {
		return nil, false
	}
	return o.ConnectingZone, true
}

// HasConnectingZone returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasConnectingZone() bool {
	if o != nil && !isNil(o.ConnectingZone) {
		return true
	}

	return false
}

// SetConnectingZone gets a reference to the given ConnectingZone and assigns it to the ConnectingZone field.
func (o *BidSubmissionResponse) SetConnectingZone(v ConnectingZone) {
	o.ConnectingZone = &v
}

// GetResourceProvider returns the ResourceProvider field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetResourceProvider() string {
	if o == nil || isNil(o.ResourceProvider) {
		var ret string
		return ret
	}
	return *o.ResourceProvider
}

// GetResourceProviderOk returns a tuple with the ResourceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetResourceProviderOk() (*string, bool) {
	if o == nil || isNil(o.ResourceProvider) {
		return nil, false
	}
	return o.ResourceProvider, true
}

// HasResourceProvider returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasResourceProvider() bool {
	if o != nil && !isNil(o.ResourceProvider) {
		return true
	}

	return false
}

// SetResourceProvider gets a reference to the given string and assigns it to the ResourceProvider field.
func (o *BidSubmissionResponse) SetResourceProvider(v string) {
	o.ResourceProvider = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BidSubmissionResponse) SetStatus(v string) {
	o.Status = &v
}

// GetReceiptTimestamp returns the ReceiptTimestamp field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetReceiptTimestamp() time.Time {
	if o == nil || isNil(o.ReceiptTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ReceiptTimestamp
}

// GetReceiptTimestampOk returns a tuple with the ReceiptTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetReceiptTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.ReceiptTimestamp) {
		return nil, false
	}
	return o.ReceiptTimestamp, true
}

// HasReceiptTimestamp returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasReceiptTimestamp() bool {
	if o != nil && !isNil(o.ReceiptTimestamp) {
		return true
	}

	return false
}

// SetReceiptTimestamp gets a reference to the given time.Time and assigns it to the ReceiptTimestamp field.
func (o *BidSubmissionResponse) SetReceiptTimestamp(v time.Time) {
	o.ReceiptTimestamp = &v
}

// GetRevisionTimestamp returns the RevisionTimestamp field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetRevisionTimestamp() time.Time {
	if o == nil || isNil(o.RevisionTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.RevisionTimestamp
}

// GetRevisionTimestampOk returns a tuple with the RevisionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetRevisionTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.RevisionTimestamp) {
		return nil, false
	}
	return o.RevisionTimestamp, true
}

// HasRevisionTimestamp returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasRevisionTimestamp() bool {
	if o != nil && !isNil(o.RevisionTimestamp) {
		return true
	}

	return false
}

// SetRevisionTimestamp gets a reference to the given time.Time and assigns it to the RevisionTimestamp field.
func (o *BidSubmissionResponse) SetRevisionTimestamp(v time.Time) {
	o.RevisionTimestamp = &v
}

// GetActivation returns the Activation field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetActivation() ActivationType {
	if o == nil || isNil(o.Activation) {
		var ret ActivationType
		return ret
	}
	return *o.Activation
}

// GetActivationOk returns a tuple with the Activation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetActivationOk() (*ActivationType, bool) {
	if o == nil || isNil(o.Activation) {
		return nil, false
	}
	return o.Activation, true
}

// HasActivation returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasActivation() bool {
	if o != nil && !isNil(o.Activation) {
		return true
	}

	return false
}

// SetActivation gets a reference to the given ActivationType and assigns it to the Activation field.
func (o *BidSubmissionResponse) SetActivation(v ActivationType) {
	o.Activation = &v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetMinQuantity() Quantity {
	if o == nil || isNil(o.MinQuantity) {
		var ret Quantity
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetMinQuantityOk() (*Quantity, bool) {
	if o == nil || isNil(o.MinQuantity) {
		return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasMinQuantity() bool {
	if o != nil && !isNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given Quantity and assigns it to the MinQuantity field.
func (o *BidSubmissionResponse) SetMinQuantity(v Quantity) {
	o.MinQuantity = &v
}

// GetOfferedQuantity returns the OfferedQuantity field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetOfferedQuantity() Quantity {
	if o == nil || isNil(o.OfferedQuantity) {
		var ret Quantity
		return ret
	}
	return *o.OfferedQuantity
}

// GetOfferedQuantityOk returns a tuple with the OfferedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetOfferedQuantityOk() (*Quantity, bool) {
	if o == nil || isNil(o.OfferedQuantity) {
		return nil, false
	}
	return o.OfferedQuantity, true
}

// HasOfferedQuantity returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasOfferedQuantity() bool {
	if o != nil && !isNil(o.OfferedQuantity) {
		return true
	}

	return false
}

// SetOfferedQuantity gets a reference to the given Quantity and assigns it to the OfferedQuantity field.
func (o *BidSubmissionResponse) SetOfferedQuantity(v Quantity) {
	o.OfferedQuantity = &v
}

// GetAcceptedQuantity returns the AcceptedQuantity field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetAcceptedQuantity() Quantity {
	if o == nil || isNil(o.AcceptedQuantity) {
		var ret Quantity
		return ret
	}
	return *o.AcceptedQuantity
}

// GetAcceptedQuantityOk returns a tuple with the AcceptedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetAcceptedQuantityOk() (*Quantity, bool) {
	if o == nil || isNil(o.AcceptedQuantity) {
		return nil, false
	}
	return o.AcceptedQuantity, true
}

// HasAcceptedQuantity returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasAcceptedQuantity() bool {
	if o != nil && !isNil(o.AcceptedQuantity) {
		return true
	}

	return false
}

// SetAcceptedQuantity gets a reference to the given Quantity and assigns it to the AcceptedQuantity field.
func (o *BidSubmissionResponse) SetAcceptedQuantity(v Quantity) {
	o.AcceptedQuantity = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetPrices() []Price {
	if o == nil || isNil(o.Prices) {
		var ret []Price
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetPricesOk() ([]Price, bool) {
	if o == nil || isNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasPrices() bool {
	if o != nil && !isNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []Price and assigns it to the Prices field.
func (o *BidSubmissionResponse) SetPrices(v []Price) {
	o.Prices = v
}

// GetTechnicalLinkage returns the TechnicalLinkage field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetTechnicalLinkage() TechnicalLinkage {
	if o == nil || isNil(o.TechnicalLinkage) {
		var ret TechnicalLinkage
		return ret
	}
	return *o.TechnicalLinkage
}

// GetTechnicalLinkageOk returns a tuple with the TechnicalLinkage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetTechnicalLinkageOk() (*TechnicalLinkage, bool) {
	if o == nil || isNil(o.TechnicalLinkage) {
		return nil, false
	}
	return o.TechnicalLinkage, true
}

// HasTechnicalLinkage returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasTechnicalLinkage() bool {
	if o != nil && !isNil(o.TechnicalLinkage) {
		return true
	}

	return false
}

// SetTechnicalLinkage gets a reference to the given TechnicalLinkage and assigns it to the TechnicalLinkage field.
func (o *BidSubmissionResponse) SetTechnicalLinkage(v TechnicalLinkage) {
	o.TechnicalLinkage = &v
}

// GetConditionalLinkage returns the ConditionalLinkage field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetConditionalLinkage() ConditionalLinkage {
	if o == nil || isNil(o.ConditionalLinkage) {
		var ret ConditionalLinkage
		return ret
	}
	return *o.ConditionalLinkage
}

// GetConditionalLinkageOk returns a tuple with the ConditionalLinkage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetConditionalLinkageOk() (*ConditionalLinkage, bool) {
	if o == nil || isNil(o.ConditionalLinkage) {
		return nil, false
	}
	return o.ConditionalLinkage, true
}

// HasConditionalLinkage returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasConditionalLinkage() bool {
	if o != nil && !isNil(o.ConditionalLinkage) {
		return true
	}

	return false
}

// SetConditionalLinkage gets a reference to the given ConditionalLinkage and assigns it to the ConditionalLinkage field.
func (o *BidSubmissionResponse) SetConditionalLinkage(v ConditionalLinkage) {
	o.ConditionalLinkage = &v
}

// GetBackupFor returns the BackupFor field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetBackupFor() BalancingServiceProvider {
	if o == nil || isNil(o.BackupFor) {
		var ret BalancingServiceProvider
		return ret
	}
	return *o.BackupFor
}

// GetBackupForOk returns a tuple with the BackupFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetBackupForOk() (*BalancingServiceProvider, bool) {
	if o == nil || isNil(o.BackupFor) {
		return nil, false
	}
	return o.BackupFor, true
}

// HasBackupFor returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasBackupFor() bool {
	if o != nil && !isNil(o.BackupFor) {
		return true
	}

	return false
}

// SetBackupFor gets a reference to the given BalancingServiceProvider and assigns it to the BackupFor field.
func (o *BidSubmissionResponse) SetBackupFor(v BalancingServiceProvider) {
	o.BackupFor = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *BidSubmissionResponse) SetTag(v string) {
	o.Tag = &v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *BidSubmissionResponse) GetComponents() []Bid {
	if o == nil || isNil(o.Components) {
		var ret []Bid
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BidSubmissionResponse) GetComponentsOk() ([]Bid, bool) {
	if o == nil || isNil(o.Components) {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *BidSubmissionResponse) HasComponents() bool {
	if o != nil && !isNil(o.Components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []Bid and assigns it to the Components field.
func (o *BidSubmissionResponse) SetComponents(v []Bid) {
	o.Components = v
}

func (o BidSubmissionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BidSubmissionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ComplexBidId) {
		toSerialize["complexBidId"] = o.ComplexBidId
	}
	if !isNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !isNil(o.BidType) {
		toSerialize["bidType"] = o.BidType
	}
	// skip: tender is readOnly
	if !isNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !isNil(o.DeliveryDate) {
		toSerialize["deliveryDate"] = o.DeliveryDate
	}
	if !isNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !isNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !isNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !isNil(o.TimeInterval) {
		toSerialize["timeInterval"] = o.TimeInterval
	}
	if !isNil(o.ConnectingZone) {
		toSerialize["connectingZone"] = o.ConnectingZone
	}
	if !isNil(o.ResourceProvider) {
		toSerialize["resourceProvider"] = o.ResourceProvider
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.ReceiptTimestamp) {
		toSerialize["receiptTimestamp"] = o.ReceiptTimestamp
	}
	if !isNil(o.RevisionTimestamp) {
		toSerialize["revisionTimestamp"] = o.RevisionTimestamp
	}
	if !isNil(o.Activation) {
		toSerialize["activation"] = o.Activation
	}
	if !isNil(o.MinQuantity) {
		toSerialize["minQuantity"] = o.MinQuantity
	}
	if !isNil(o.OfferedQuantity) {
		toSerialize["offeredQuantity"] = o.OfferedQuantity
	}
	if !isNil(o.AcceptedQuantity) {
		toSerialize["acceptedQuantity"] = o.AcceptedQuantity
	}
	if !isNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !isNil(o.TechnicalLinkage) {
		toSerialize["technicalLinkage"] = o.TechnicalLinkage
	}
	if !isNil(o.ConditionalLinkage) {
		toSerialize["conditionalLinkage"] = o.ConditionalLinkage
	}
	if !isNil(o.BackupFor) {
		toSerialize["backupFor"] = o.BackupFor
	}
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !isNil(o.Components) {
		toSerialize["components"] = o.Components
	}
	return toSerialize, nil
}

type NullableBidSubmissionResponse struct {
	value *BidSubmissionResponse
	isSet bool
}

func (v NullableBidSubmissionResponse) Get() *BidSubmissionResponse {
	return v.value
}

func (v *NullableBidSubmissionResponse) Set(val *BidSubmissionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBidSubmissionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBidSubmissionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBidSubmissionResponse(val *BidSubmissionResponse) *NullableBidSubmissionResponse {
	return &NullableBidSubmissionResponse{value: val, isSet: true}
}

func (v NullableBidSubmissionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBidSubmissionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


