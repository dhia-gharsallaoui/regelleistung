/*
IP RL BSP API

IP RL BSP API for participation in capacity/energy market tenders.

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BalancingServiceProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BalancingServiceProvider{}

// BalancingServiceProvider Representation of an provider.
type BalancingServiceProvider struct {
	// A short, human-readable name of the provider.
	ShortName *string `json:"shortName,omitempty"`
	// Full, human-readable name of the provider.
	Name *string `json:"name,omitempty"`
	// Representation of EIC. The coding scheme is the Energy Identification Coding Scheme (EIC), maintained by ENTSO-e.
	Eic string `json:"eic"`
}

// NewBalancingServiceProvider instantiates a new BalancingServiceProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalancingServiceProvider(eic string) *BalancingServiceProvider {
	this := BalancingServiceProvider{}
	this.Eic = eic
	return &this
}

// NewBalancingServiceProviderWithDefaults instantiates a new BalancingServiceProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalancingServiceProviderWithDefaults() *BalancingServiceProvider {
	this := BalancingServiceProvider{}
	return &this
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *BalancingServiceProvider) GetShortName() string {
	if o == nil || isNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalancingServiceProvider) GetShortNameOk() (*string, bool) {
	if o == nil || isNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *BalancingServiceProvider) HasShortName() bool {
	if o != nil && !isNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *BalancingServiceProvider) SetShortName(v string) {
	o.ShortName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BalancingServiceProvider) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalancingServiceProvider) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BalancingServiceProvider) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BalancingServiceProvider) SetName(v string) {
	o.Name = &v
}

// GetEic returns the Eic field value
func (o *BalancingServiceProvider) GetEic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eic
}

// GetEicOk returns a tuple with the Eic field value
// and a boolean to check if the value has been set.
func (o *BalancingServiceProvider) GetEicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Eic, true
}

// SetEic sets field value
func (o *BalancingServiceProvider) SetEic(v string) {
	o.Eic = v
}

func (o BalancingServiceProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalancingServiceProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["eic"] = o.Eic
	return toSerialize, nil
}

type NullableBalancingServiceProvider struct {
	value *BalancingServiceProvider
	isSet bool
}

func (v NullableBalancingServiceProvider) Get() *BalancingServiceProvider {
	return v.value
}

func (v *NullableBalancingServiceProvider) Set(val *BalancingServiceProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableBalancingServiceProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableBalancingServiceProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalancingServiceProvider(val *BalancingServiceProvider) *NullableBalancingServiceProvider {
	return &NullableBalancingServiceProvider{value: val, isSet: true}
}

func (v NullableBalancingServiceProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalancingServiceProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


